// ***********************************************************************
// <copyright file="ForeignKeyAttribute.cs" company="ServiceStack, Inc.">
//     Copyright (c) ServiceStack, Inc. All Rights Reserved.
// </copyright>
// <summary>Fork for YetAnotherForum.NET, Licensed under the Apache License, Version 2.0</summary>
// ***********************************************************************
using System;

namespace ServiceStack.DataAnnotations;

/// <summary>
/// Class ForeignKeyAttribute.
/// Implements the <see cref="ServiceStack.DataAnnotations.ReferencesAttribute" />
/// </summary>
/// <seealso cref="ServiceStack.DataAnnotations.ReferencesAttribute" />
[AttributeUsage(AttributeTargets.Property)]
public class ForeignKeyAttribute : ReferencesAttribute
{
    /// <summary>
    /// Initializes a new instance of the <see cref="ForeignKeyAttribute" /> class.
    /// </summary>
    /// <param name="type">The type.</param>
    public ForeignKeyAttribute(Type type)
        : base(type)
    {
    }

    /// <summary>
    /// Gets or sets the on delete.
    /// </summary>
    /// <value>The on delete.</value>
    public string OnDelete { get; set; }
    /// <summary>
    /// Gets or sets the on update.
    /// </summary>
    /// <value>The on update.</value>
    public string OnUpdate { get; set; }
    /// <summary>
    /// Explicit foreign key name. If it's null, or empty, the FK name will be autogenerated as before.
    /// </summary>
    /// <value>The name of the foreign key.</value>
    public string ForeignKeyName { get; set; }
}